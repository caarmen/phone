name: Code check
on:
  pull_request:
  push:
      branches:
        - main
jobs:
  CheckServer:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install -r requirements/test.txt --upgrade pip
      - name: Create fake .env file
        run: cp .env.template .env
      - name: Run codecheck
        run: bash scripts/codecheck.sh
      - name: Run tests
        run: bash -x scripts/run_tests.sh
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'server/reports/junit.xml'
          check_name: Server tests
      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-reports
          path: server/reports
  CheckClient:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: |
          yarn
      - name: Run codecheck
        run: yarn lint
      - name: Run tests
        run: mkdir -p reports && yarn --silent test --reporter xunit > reports/junit.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'client/reports/junit.xml'
          check_name: Client tests
      - name: Archive reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: client-reports
          path: client/reports
